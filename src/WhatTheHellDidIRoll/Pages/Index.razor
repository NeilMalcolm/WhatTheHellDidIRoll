@using WhatTheHellDidIRoll.Lib;
@using MudBlazor;

@page "/"

<MudItem Class="d-flex align-center" Style="height:100%;">

    <MudGrid Class="d-flex justify-center" Spacing="0" Style="max-height:100%;">
        <MudItem Class="d-flex flex-column"> 
            <MudItem>
                <MudText Typo="Typo.h3" 
                        Color="Color.Default"
                        Align="Align.Center">What the Hell did I Roll?</MudText>

                <MudText Typo="Typo.h2" 
                         Color="Color.Dark"
                         Style="font-weight: bold; margin: 45px 0 40px 0;"
                         Align="Align.Center">@_rollResultText</MudText>
            </MudItem>
            
            <MudItem id="roll-container" Class="d-flex align-start">
                
                <MudCard id="roll-card" Elevation="2" >    
                        <EditForm Model="@_roll" OnValidSubmit="@HandleSubmit">
                            <DataAnnotationsValidator />
                            <MudGrid Class="pa-6">
                                    <MudItem xs="12" sm="6"
                                            Class="white-dice-field">
                                        <MudNumericField class="form-num-field" 
                                            @bind-Value="_roll.TensDice" 
                                            For="(() => _roll.TensDice)"
                                            Label="White Dice" 
                                            Variant="Variant.Outlined" 
                                            HideSpinButtons="true" 
                                            MaxLength="2"
                                            Adornment="Adornment.End"
                                            AdornmentIcon="fa-solid fa-dice"/>
                                    </MudItem>

                                    <MudItem xs="12" sm="6"
                                             Class="dark-dice-field">
                                        <MudNumericField class="form-num-field" 
                                            @bind-Value="_roll.UnitsDice" 
                                            Label="Black Dice" 
                                            For="(() => _roll.UnitsDice)"
                                            Variant="Variant.Outlined" 
                                            HideSpinButtons="true" 
                                            MaxLength="2"
                                            HelperText=""
                                            Adornment="Adornment.End"
                                            AdornmentColor="Color.Dark"
                                            AdornmentIcon="fa-solid fa-dice"/>
                                    </MudItem>

                                    <MudItem xs="12" sm="12">
                                        <MudButton class="form-submit-button" 
                                            xs="12"
                                            DisableElevation="true"
                                            Style="width:100%;"
                                            ButtonType="ButtonType.Submit" 
                                            Variant="Variant.Filled" 
                                            Color="Color.Primary">Roll</MudButton>
                                    </MudItem>
                            </MudGrid>
                        </EditForm>
                    </MudCard>
               <div id="past-rolls-card" >
                    <MudCard Elevation="2">
                    <MudItem Class="d-flex justify-center align-center">
                        <MudText Typo="Typo.h5" 
                                 class="mr-auto"
                                 Align="Align.Center"
                                 Style="Padding: 20px;">Past Rolls</MudText>

                        <MudButton Variant="Variant.Text" 
                                   class="mr-2"
                                   Color="Color.Primary" 
                                   OnClick="@ClearPreviousRolls"
                                   hidden="@IsPreviousRollsListHidden" >Clear</MudButton>
                    </MudItem>
                    <MudDivider />

                    <MudList Clickable="false" 
                                Dense="false"
                                Style="padding: 0 !important;">
                       @if (IsPreviousRollsListHidden)
                        {
                            
                        }
                        else
                        { 
                            <MudItem id="previous-rolls" 
                                    Style="max-height:375px; overflow-x:hidden; overflow-y: auto; padding: 0 0 10px 0;">
                                    @{var last = PreviousRolls.LastOrDefault();}
                                    @foreach(var item in PreviousRolls)
                                    {
                                        <MudListItem>
                                           
                                                <MudText Typo="Typo.h6" Class="white-dice-field d-inline">@item.Item2.TensDice</MudText>
                                            
                                                <MudIcon Class="d-inline previous-roll-dice" 
                                                    Icon="fa-solid fa-dice"/>
                                                
                                                <MudText Typo="Typo.body1" Style="color: gray;" Class="d-inline previous-roll-dice"> +&nbsp;&nbsp;</MudText>

                                                <MudText Typo="Typo.h6" Class="d-inline dark-dice-field">@item.Item2.UnitsDice</MudText>

                                                <MudIcon Class="d-inline previous-roll-dice" 
                                                    Icon="fa-solid fa-dice" />
                                                
                                                <MudText  Class="d-inline" Style="color: gray;"> = &nbsp;</MudText>
                                            
                                                <MudText Typo="Typo.h6" Class="d-inline">@item.Item1.ToString()</MudText>
                                        </MudListItem>
                                        @if (item != last)
                                        {
                                            <MudDivider />
                                        }
                                    }
                                    <MudScrollToTop TopOffset="1" 
                                                    Selector="#previous-rolls"
                                                    VisibleCssClass="visible absolute"
                                                    HiddenCssClass="invisible">
                                        <MudButton Color="Color.Primary" 
                                                    Variant="Variant.Filled" 
                                                    StartIcon="@Icons.Filled.ArrowUpward" >To Top</MudButton>
                                    </MudScrollToTop>
                            </MudItem>
                        }
                    </MudList>
                </MudCard>
               </div>
            </MudItem>
            <div id="details">
	          <MudText Align="Align.Center">Made in Blazor WASM, styled with <MudLink Underline="Underline.Always" Href="https://github.com/MudBlazor/MudBlazor/">MudBlazor</MudLink>.</MudText>
	          <MudText Align="Align.Center"><MudLink Underline="Underline.Always" Href="https://github.com/NeilMalcolm/WhatTheHellDidIRoll">Code</MudLink> hosted on GitHub Pages.</MudText>
            </div>
        </MudItem>
    </MudGrid>
</MudItem>

@code {

    const string DefaultRollResultText = "<Roll Me>";
    private string _rollResultText = DefaultRollResultText;
    private Roll _roll = new(1, 1);

    private List<Tuple<string, Roll>> PreviousRolls { get; set; }
        = new List<Tuple<string, Roll>>();

    public bool IsPreviousRollsListHidden 
        => PreviousRolls.Count == 0;

    public void HandleSubmit()
    {
        var newRoll = _roll.GetRoll()
            .ToString();

        _rollResultText = newRoll;
        PreviousRolls.Insert
        (
            0,
            new Tuple<string, Roll>(newRoll, new Roll (_roll.TensDice, _roll.UnitsDice))
        );
    }

    public void ClearPreviousRolls()
    {
        PreviousRolls = new List<Tuple<string, Roll>>(); 
    }
}